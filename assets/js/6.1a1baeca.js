(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{306:function(n,t,s){n.exports=s.p+"assets/img/abTest1.fb9ead71.jpg"},307:function(n,t,s){n.exports=s.p+"assets/img/abTest2.ee0e0b8f.jpg"},324:function(n,t,s){"use strict";s.r(t);var e=[function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",{staticClass:"content"},[e("h1",{attrs:{id:"_1-转化率测试的简单重述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-转化率测试的简单重述"}},[n._v("#")]),n._v(" 1 转化率测试的简单重述")]),n._v(" "),e("p",[n._v("假设有A和B两种网站设计,当用户登陆时,我们随机地将其引向其中之一,并且记录下来,当有足够多的用户访问以后,我们用得到的数据计算一些感兴趣的指标,(一般来说,对于网站我们会计算购买和注册情况)")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("visitors_to_A=1300\nvisitors_to_B=1275\n\nconversions_from_A=120\nconversions_from_B=125\n")])])]),e("p",[n._v("我们真正关心的是AB的转化概率, 从商业化的角度,我们希望转化率越高越好,因此我们的目标是找出A和B谁的转化率更高.")]),n._v(" "),e("p",[n._v("为此需要对A和B的转化概率进行建模, 由于需要对概率建模,因此选择Beta分布作为先验是个好主意(因为概率的取值范围在0和1之间,刚好与Beta分布对应的值域一致)")]),n._v(" "),e("p",[n._v("我们的访客数量和转化数据是二项式的:对于站点A,1300个访客里有120个成功地转化. Beta先验和二项式观测值之间有一个共轭关系,这意味着你不需要进行任何的MCMC.")]),n._v(" "),e("p",[n._v("如果我们的先验是Beta(a0,b0),并且我观测的到N次访问里有X次转化,那么此时的后验是Beta(a0+X,b0+N-X). 利用SciPy的内建beta函数,可以直接后验进行采样.")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("from scipy.stats import beta\nimport os\n\nalpha_prior=1\nbeta_prior=1\n\n\nposterior_A=beta(alpha_prior+conversions_from_A,beta_prior+visitors_to_A-conversions_from_A)\n\nposterior_B=beta(alpha_prior+conversions_from_B,beta_prior+visitors_to_B-conversions_from_B)\n\n\n")])])]),e("p",[n._v("接下来我们想判断哪个组转化概率可能更高, 为此类似MCMC的做法,我们对后验进行采样,并且比较, 来自于A的后验样本的概率大于来自B的.我们使用rvs方法生成样本")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("#用采样来判断哪个组的转化率更高\nsamples=20000\nsamples_posterior_A=posterior_A.rvs(samples)\nsamples_posterior_B=posterior_B.rvs(samples)\n\n\n#print('dd')\naa=samples_posterior_A\nbb=samples_posterior_B\nprint(aa)\nprint(bb)\n#print((samples_posterior_A > samples_posterior_B).mean()) #注意这里的mean()要在print括号里面\n\n[Output]:0.31355\n\n")])])]),e("p",[n._v("所以可以看到,有31%的概率A比B的转化率高,这并不特别显著,如果两个页面完全相同,那么概率会接近50%")]),n._v(" "),e("p",[n._v("我们也可以不通过直方图对后验进行可视化分析. 这是通过pdf方法实现的.")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("from IPython.core.pylabtools import figsize\nfrom matplotlib import pyplot as plt\nimport numpy as np\n\n\nfigsize(12.5, 4)\n\n#这里的dpi可以控制图片的大小\nplt.rcParams['savefig.dpi']=100\nplt.rcParams['figure.dpi']=100\n\nx=np.linspace(0,1,500)\nplt.plot(x,posterior_A.pdf(x),label='posterior of A')\nplt.plot(x,posterior_B.pdf(x),label='posterior of B')\n\nplt.xlabel('Value')\nplt.ylabel('Density')\nplt.title(\"Posterior of distributions of the conversion rates of Web page $A$ and $B$\")\n\n\n#给图像加上图例\nplt.legend()\n\n\n")])])]),e("p",[e("img",{attrs:{src:s(306),alt:"![Alt text](file_fig/abTest1.jpg)"}})]),n._v(" "),e("p",[n._v("我们感兴趣的部分放大.")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("plt.plot(x,posterior_A.pdf(x),label='posterior of A')\nplt.plot(x,posterior_B.pdf(x),label='posterior of B')\n\nplt.xlim(0.05,0.15)\n\nplt.xlabel('Value')\nplt.ylabel('Density')\nplt.title(\"Zoomed-in Posterior distributions of the conversion rates of Web page $A$ and $B$\")\n\n\n#给图像加上图例\nplt.legend()\n\n")])])]),e("p",[e("img",{attrs:{src:s(307),alt:"![Alt text](file_fig/abTest2.jpg)"}})]),n._v(" "),e("h1",{attrs:{id:"_2-具体代码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-具体代码"}},[n._v("#")]),n._v(" 2 具体代码")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("from scipy.stats import beta\nimport os\n\n\nalpha_prior=1\nbeta_prior=1\n\nconversions_from_A=120\nconversions_from_B=125\n\nvisitors_to_A=1300\nvisitors_to_B=1275\n\n\nposterior_A=beta(alpha_prior+conversions_from_A,beta_prior+visitors_to_A-conversions_from_A)\nposterior_B=beta(alpha_prior+conversions_from_B,beta_prior+visitors_to_B-conversions_from_B)\n\n\n'''\n\n#用采样来判断哪个组的转化率更高\nsamples=20000\nsamples_posterior_A=posterior_A.rvs(samples)\nsamples_posterior_B=posterior_B.rvs(samples)\n\n\n#print('dd')\naa=samples_posterior_A\nbb=samples_posterior_B\nprint(aa)\nprint(bb)\n#print((samples_posterior_A > samples_posterior_B).mean()) #注意这里的mean()要在print括号里面\n\n\n\n'''\n\n\nfrom IPython.core.pylabtools import figsize\nfrom matplotlib import pyplot as plt\nimport numpy as np\n\n\nfigure_save_path=\"file_fig\"\n\nfigsize(12.5, 4)\n\n#这里的dpi可以控制图片的大小\nplt.rcParams['savefig.dpi']=100\nplt.rcParams['figure.dpi']=100\n\nx=np.linspace(0,1,500)\n\nplt.plot(x,posterior_A.pdf(x),label='posterior of A')\nplt.plot(x,posterior_B.pdf(x),label='posterior of B')\n\nplt.xlabel('Value')\nplt.ylabel('Density')\nplt.title(\"Posterior distributions of the conversion rates of Web page $A$ and $B$\")\n\n\n#给图像加上图例\nplt.legend()\n\n\n\n#保存图片在文件夹\n#figure_save_path=\"file_fig\"\nif not os.path.exists(figure_save_path):\n    os.makedirs(figure_save_path)\n\nplt.savefig(os.path.join(figure_save_path,'abTest1.jpg'))\n\nplt.show()\nplt.close()\n\n\n\n\n'''\n# 批量绘制图片,批量存储\nfor i in range(0,3,1):\n    x=[i,1,2,3,4,5]\n    y=[0,2,4,6,8,10]\n    name_list=[\"one\",\"two\",\"three\"]#先创建名字列表，可以是用在图片命名，也可以用在文件夹命名\n    plt.plot(x,y)\n    # 指定图片保存路径\n    figure_save_path = \"files_fig_many\"#这里创建了一个文件夹，如果依次创建不同文件夹，可以用name_list[i]\n    if not os.path.exists(figure_save_path):\n        os.makedirs(figure_save_path) # 如果不存在目录figure_save_path，则创建\n    plt.savefig(os.path.join(figure_save_path , name_list[i]))#分别命名图片\n'''\n\n\n\n\n\n\n\n# 将我们感兴趣的部分放大\n\nplt.plot(x,posterior_A.pdf(x),label='posterior of A')\nplt.plot(x,posterior_B.pdf(x),label='posterior of B')\n\nplt.xlim(0.05,0.15)\n\nplt.xlabel('Value')\nplt.ylabel('Density')\nplt.title(\"Zoomed-in Posterior distributions of the conversion rates of Web page $A$ and $B$\")\n\nplt.legend()\n\nif not os.path.exists(figure_save_path):\n    os.makedirs(figure_save_path)\n\nplt.savefig(os.path.join(figure_save_path,'abTest2.jpg'))\n\n\nplt.show() \n\n#每次展示完图片之后要及时关闭plt,防止图片重复和资源浪费\nplt.close()\n\n\n\n\n\n\n\n\n")])])])])}],r=s(1),o=Object(r.a)({},(function(){var n=this.$createElement;this._self._c;return this._m(0)}),e,!1,null,null,null);t.default=o.exports}}]);